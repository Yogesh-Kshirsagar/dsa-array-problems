Step-by-Step Approach:
Step 1: Understand key cases
There are two possible candidates for the maximum product of 3 numbers:
The product of the three largest numbers in the array.
The product of the two smallest numbers (possibly negative) and the largest number.

Why case #2?
Because multiplying two negative numbers gives a positive result â€” and if they are large in magnitude, they can result in a high product.

ðŸ’¡ Step 2: Sort the array
Sort the array in ascending order so you can easily access:
The three largest numbers â†’ last 3 elements
The two smallest numbers â†’ first 2 elements

Then compute:
maxProduct = max(nums[n-1] * nums[n-2] * nums[n-3],
                 nums[0] * nums[1] * nums[n-1])

Time Complexity: O(n log n) for sorting the array
Space Complexity: O(1) (in-place sort and constant extra space)